<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ggit.mappers.MemberMapper">
    <select id="member" resultType="com.ggit.vo.MemberVo">
        SELECT member.idx, member.nick,member.email,member.pw,member.auth,member.date,
        member.img,member.con,member.url,member.company,member.location  
        FROM member;
    </select>
    <select id="memberByemailPw" resultType="com.ggit.vo.MemberVo">
        SELECT member.idx, member.nick,member.email,member.pw,member.auth,member.date,
        member.img,member.con,member.url,member.company,member.location 
        FROM member where email = #{email} and pw = #{pw};
    </select>

    <select id="memberByNick" resultType="com.ggit.vo.MemberVo">
        <!-- 프로필 띄울때 씀 -->
        SELECT member.idx, 
               member.nick,
               member.email,
               member.pw,
               member.auth,
               member.date,
               member.img,
               member.con,
               member.url,
               member.company,
               member.location,
               member.email_check,
        (select count(idx) from follow where member=member.idx) as followers,
        (select count(idx) from follow where follower=member.idx) as following
        FROM member where nick = #{nick};
    </select>

    <select id="hasNick" resultType="int">
        select count(idx) from member where lower(nick) = lower(#{nick})
    </select>
    <select id="nickFromIdx" resultType="string">
        select nick from member where idx = ${idx}
    </select>

    <select id="imgFromIdx" resultType="string">
        select img from member where idx =  ${idx}
    </select>
    <select id="imgFromNick" resultType="string">
        select img from member where nick =  #{nick}
    </select>

    <insert id="signupMember">
        insert into member(idx, nick, email, pw, auth, date) values(idx, #{nick}, #{email}, #{pw}, 0 , sysdate());
    </insert>

    <update id="saveProfile">

        <!-- 프로필 성정 저장 -->
        update member set nick = #{nick},con= #{con},url= #{url},company= #{company},location = #{location}, email_check = #{email_check} where idx= ${idx}
    </update>
    <update id="saveProfileImg">

        <!-- 프로필 설정 저장 -->
        update member set img=#{img} where idx= ${idx}
    </update>
    <update id="delectProfileImg">
         update member set img=null where idx= ${idx}
    </update>
<select id="countMember" resultType="int">
    select count(idx) from member where nick like "%${search}%"
</select>
<select id="searchMember"  resultType="com.ggit.vo.RepositoriesVO">
        select member.idx as member_idx,
        member.nick as member_nick,(select count(token) from push where member.idx =
        push.member) as commits
        ,(select date from push where member.idx = push.member order by date DESC limit 1) as
        push_date
        ,(select count(repomem.idx) from repomem where repomem.member = member.idx ) as repo_count,
        (select count(f.idx) from follow f where f.member=member.idx) as followerCount,
        (select count(f.idx) from follow f where f.follower=member.idx) as followingCount,
        member.con as member_con,member.img as member_img,
        (select count(follow.idx) from follow where follow.follower = ${member} and follow.member = member.idx) as isFollow
        from member
        where (member.nick like "%${search}%")
        limit ${start} , ${count}


    
    
</select>
<select id="searchMembernick" resultType="com.ggit.vo.RepositoriesVO">
    SELECT member.nick as member_nick, member.email as member_email, member.img as member_img from member where (member.nick like "${search}%");

</select>
    
</mapper>